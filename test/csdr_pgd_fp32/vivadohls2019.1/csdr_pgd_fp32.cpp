// Copyright @ Heriot-Watt University UDRC WP 2.1
// Author: Yun Wu

#include "csdr_pgd_fp32.hpp"

float pgd_f32(float AtA[ROW][ROW], float y[ROW],
		float lambda, float beta, float gamma,
		float x_out[ROW]){

#pragma HLS INLINE off
    float AtAx[ROW];
    float b[ROW];
    float grad_x[ROW];
    float lambdagrad_x[ROW];
    float xlambdagrad_x[ROW];
    float xlambdagrad_xlambdagamma1[ROW];
    float xlambdagrad_xlambdagamma2[ROW];
	float x[ROW] = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
//    int i=0;
//    for(i=0;i<ROW;i++){
//    	float tmp = y[i];
//    	b[i] = tmp;
//    }
    VEC2VEC<float, ROW>(y, b);
    for(int i=0;i<MAX_ITER;i++){
//#pragma HLS PIPELINE II=2
        float lambdagamma = lambda * gamma;
//        grad_x = AtA*x - Atb;
        MAT_VEC_MUL<float, ROW, ROW>(AtA, x, AtAx);// AtA*x
        VEC_SUB<float, ROW>(AtAx, b, grad_x); // AtA*x - Atb
//      z = prox_l1(x - lambda*grad_x, lambda*gamma);
        VEC_SCALAR_MUL<float, ROW>(grad_x, lambda,
                lambdagrad_x); // lambda*grad_x
        VEC_SUB<float, ROW>(x, lambdagrad_x,
                xlambdagrad_x); // x - lambda*grad_x
//		z = prox_l1(x, kappa)
//			z = max( 0, x - kappa ) - max( 0, -x - kappa );
        VEC_SCALAR_SUB<float, ROW>(xlambdagrad_x,
                lambdagamma, xlambdagrad_xlambdagamma1);// x - kappa
        VEC_SCALAR_ADD<float, ROW>(xlambdagrad_x,
                lambdagamma, xlambdagrad_xlambdagamma2); // x + kappa
        VEC_MINUS<float, ROW>(xlambdagrad_xlambdagamma2,
                xlambdagrad_xlambdagamma2); // -(x + kappa)
        VEC_SCALAR_MAX<float,ROW>(xlambdagrad_xlambdagamma1, (float)0,
                xlambdagrad_xlambdagamma1);// max( 0, x - kappa )
        VEC_SCALAR_MAX<float,ROW>(xlambdagrad_xlambdagamma2, (float)0,
                xlambdagrad_xlambdagamma2);// max( 0, -x - kappa )
        VEC_SUB<float,ROW>(xlambdagrad_xlambdagamma1,
                xlambdagrad_xlambdagamma2,
				x);// max( 0, x - kappa ) - max( 0, -x - kappa )
//        lambda = lambda * beta;
    }
//    for(int i=0;i<ROW;i++){
//    	float tmp = x[i];
//    	x_out[i] = tmp;
//    }
    VEC2VEC<float, ROW>(x, x_out);
        return lambda;

}

void csdr_pgd(float y[COL*2], float xd[ROW]){

	float beta = 1;
	float gamma = 0;
	float lambda = 0.225793927247702;//1.8/7.97187073160452;
	float At[ROW][COL]={
		{0.931866681327644,0.838061089488313,1.2523588289794,0.421605976701325,0.952332406457259,0.645117675787991,0.964938588597808,0.944104654145096},
		{0.161959278285176,-0.955643636547585,0.282622037750326,-0.719724206347215,-0.607076522333817,-0.169900492549855,-0.110281395418544,0.189971344064696},
		{-0.415206227447252,0.175001039173724,-0.454011429727577,0.395819834986435,-0.0864434003272563,0.503144021970918,0.855072994653063,-0.585406135781203},
		{-0.23470036317308,-0.0191464590679525,-0.259458517095704,-0.408566214577205,-0.364394605247579,0.278391439801498,0.919900499235869,-0.7014171545098},
		{0.180244957680271,-0.6109139495105,0.167493575910968,0.763423875949973,-0.559484927263708,0.536397565616423,-0.158006504312769,-0.218013645530482},
		{0.130499288869473,0.485903604261604,-0.0988835807672445,-0.509314608305065,0.469126832692346,-0.465634486278991,0.620989536549139,0.2192009235346},
		{-0.253924219469912,0.22652840008171,-0.810100775781212,-0.277868156988883,0.224393089968728,0.465718786096802,0.734045385510898,0.147525312451892},
		{-0.40438794329676,0.263457153159756,-0.967651890401625,0.519354655472853,-0.0284528739459725,0.238979914229478,-0.223575700543671,-0.229936117865992},
		{-0.289131979364314,0.00714089691334058,-0.313805833469127,-0.157304345114324,-0.0284528739459725,-0.376929603870947,0.330728221350119,-0.358001683343687},
		{-0.334013581739767,-0.879809882519899,0.360112664213003,0.170715636182436,0.224393089968727,-0.0728713069032493,0.459474537150176,-0.00957562281042107},
		{-0.523346768063024,0.167377878176584,0.399556024234768,-0.578623192904613,0.469126832692346,-0.122303314930688,-0.258939226190612,0.474318999126473},
		{-0.318194647321743,0.340315899437401,0.0874042136411119,0.4300960467111,-0.559484927263708,0.157122357044652,0.0700687031030885,0.610861124724032},
		{0.372650052814552,-0.251451591005146,0.00456072754362483,0.215046291916131,-0.364394605247579,-0.971911362462572,0.168037301973811,0.30856967531625},
		{0.808053706640803,0.478280443264463,0.153338986260054,-0.307882033776757,-0.0864434003272555,0.0847937792387599,-0.217123305011591,-0.10811378687987},
		{0.425978522924503,0.302362154109396,0.167366073817881,-0.173123272846336,-0.607076522333818,-0.222946986643695,-0.0832385272425293,-0.327921033706168},
		{-0.23834675866657,-0.567463039415214,0.0290988948913491,0.216343712940146,0.952332406457256,-0.50716798614652,-0.0720911094042556,-0.356166852935417}
	};
	float AtA[ROW][ROW]={
		{6.46243004334221,-1.21426551501860,-0.127287980199009,-0.673937736863805,-0.357463159126502,1.14279806190071,0.183261668003756,-1.45467383047496,-1.01188508463840,0.0753850148978321,0.474830967652294,0.492358634928037,-0.287649403900107,0.876854812482999,-0.324911805927021,-0.396090332668214},
		{-1.21426551501860,1.98302289639964,-0.886195574216219,0.140231086724284,0.335415889953353,-0.337121799723403,-0.554845296002442,-1.00689216417880,-0.0522940921692834,0.589262223372810,0.139304691320589,-0.240329645416481,0.573598823506858,-0.0197893441350854,0.305247824841453,-0.195475586932846},
		{-0.127287980199009,-0.886195574216219,1.90029783341528,1.41894340090604,0.355153348873195,0.00198266019499546,1.15910939037378,0.925038909040232,0.506689156928013,0.231222077521565,-0.765015691079640,0.151961028875023,-0.610148252371051,-0.515522680549827,-0.207371696326681,-0.118563952773447},
		{-0.673937736863805,0.140231086724284,1.41894340090604,1.83818409637918,-0.0252035275403140,0.310734719387426,0.998630400502642,0.161252259635447,0.674191171315356,0.259388396480536,-0.523526632204280,-0.246633355045573,-0.371337505063907,-0.181596385145756,0.234128440975253,-0.333846833499053},
		{-0.357463159126502,0.335415889953353,0.355153348873195,-0.0252035275403140,1.68981594809474,-1.33685252315484,-0.555856386000563,0.230136555545112,-0.389600534817664,0.432783924518278,-0.961962314491179,0.330784586461225,-0.0255620422834376,-0.204177657290310,0.0926349570665848,-0.242073083058743},
		{1.14279806190071,-0.337121799723403,0.00198266019499546,0.310734719387426,-1.33685252315484,1.39288421915434,0.675148293377620,-0.407453264086210,0.365953796357628,-0.171218417314998,0.488426086634232,-0.262078219970879,0.270068458556395,0.240928965797337,-0.0304217184117155,0.140178827497911},
		{0.183261668003756,-0.554845296002442,1.15910939037378,0.998630400502642,-0.555856386000563,0.675148293377620,1.67709919721977,0.708824544745349,0.380986834422820,-0.101374535629223,-0.0638826398073338,0.0567536948206246,-0.580571133615410,-0.290744847668348,-0.476682476864264,-0.279675165835187},
		{-1.45467383047496,-1.00689216417880,0.925038909040232,0.161252259635447,0.230136555545112,-0.407453264086210,0.708824544745349,1.59979639700778,0.259866555974256,-0.480847848454412,-0.525156361460180,0.254471615203660,-0.440089403541101,-0.412913167284658,-0.286461360354367,-0.0192022394918372},
		{-1.01188508463840,-0.0522940921692834,0.506689156928013,0.674191171315356,-0.389600534817664,0.365953796357628,0.380986834422820,0.259866555974256,0.587298905995375,0.126903620315882,-0.104545330088480,-0.239474247196225,0.177016917132897,-0.292511912214339,0.0448830593766457,0.289434068705995},
		{0.0753850148978321,0.589262223372810,0.231222077521565,0.259388396480536,0.432783924518278,-0.171218417314998,-0.101374535629223,-0.480847848454412,0.126903620315882,1.31132649056714,0.0633127161018746,-0.198881327103834,0.198424490609343,-0.812341448236955,-0.532671304446738,0.847224075401599},
		{0.474830967652294,0.139304691320589,-0.765015691079640,-0.523526632204280,-0.961962314491179,0.488426086634232,-0.0638826398073338,-0.525156361460180,-0.104545330088480,0.0633127161018746,1.32342313140185,-0.000539649711376615,-0.308951435360912,-0.149405690378786,-0.396794670764787,0.274725917473661},
		{0.492358634928037,-0.240329645416481,0.151961028875023,-0.246633355045573,0.330784586461225,-0.262078219970879,0.0567536948206246,0.254471615203660,-0.239474247196225,-0.198881327103834,-0.000539649711376615,1.12545660672504,0.140172620175246,-0.232937576880894,0.00599700817179416,-0.856806961623025},
		{-0.287649403900107,0.573598823506858,-0.610148252371051,-0.371337505063907,-0.0255620422834376,0.270068458556395,-0.580571133615410,-0.440089403541101,0.177016917132897,0.198424490609343,-0.308951435360912,0.140172620175246,1.44920857658112,-0.00541065357624859,0.368971722366384,0.124407428679175},
		{0.876854812482999,-0.0197893441350854,-0.515522680549827,-0.181596385145756,-0.204177657290310,0.240928965797337,-0.290744847668348,-0.412913167284658,-0.292511912214339,-0.812341448236955,-0.149405690378786,-0.232937576880894,-0.00541065357624859,1.07350073360536,0.654891769096636,-0.597318137667490},
		{-0.324911805927021,0.305247824841453,-0.207371696326681,0.234128440975253,0.0926349570665848,-0.0304217184117155,-0.476682476864264,-0.286461360354367,0.0448830593766457,-0.532671304446738,-0.396794670764787,0.00599700817179416,0.368971722366384,0.654891769096636,0.863571764083709,-0.647965621853004},
		{-0.396090332668214,-0.195475586932846,-0.118563952773447,-0.333846833499053,-0.242073083058743,0.140178827497911,-0.279675165835187,-0.0192022394918372,0.289434068705995,0.847224075401599,0.274725917473661,-0.856806961623025,0.124407428679175,-0.597318137667490,-0.647965621853004,1.72268316002748}
	};
	float DCTinvM[ROW][ROW]={
		{0.25,0.351850934381596,0.346759961330537,0.338329500293588,0.326640741219094,0.311806253246668,0.29396890060484,0.273300466750439,0.25,0.224291896585659,0.196423739596776,0.166663914619437,0.135299025036549,0.102631131880589,0.0689748448207358,0.0346542922997729},
		{0.25,0.338329500293588,0.29396890060484,0.224291896585659,0.135299025036549,0.0346542922997729,-0.0689748448207357,-0.166663914619437,-0.25,-0.311806253246668,-0.346759961330537,-0.351850934381596,-0.326640741219094,-0.273300466750439,-0.196423739596776,-0.102631131880589},
		{0.25,0.311806253246668,0.196423739596776,0.0346542922997729,-0.135299025036549,-0.273300466750439,-0.346759961330537,-0.338329500293588,-0.25,-0.102631131880589,0.0689748448207358,0.224291896585659,0.326640741219094,0.351850934381596,0.29396890060484,0.166663914619437},
		{0.25,0.273300466750439,0.0689748448207358,-0.166663914619437,-0.326640741219094,-0.338329500293588,-0.196423739596776,0.0346542922997727,0.25,0.351850934381596,0.29396890060484,0.102631131880589,-0.135299025036549,-0.311806253246668,-0.346759961330537,-0.224291896585659},
		{0.25,0.224291896585659,-0.0689748448207357,-0.311806253246668,-0.326640741219094,-0.102631131880589,0.196423739596775,0.351850934381596,0.25,-0.0346542922997726,-0.29396890060484,-0.338329500293588,-0.13529902503655,0.166663914619437,0.346759961330537,0.27330046675044},
		{0.25,0.166663914619437,-0.196423739596775,-0.351850934381596,-0.135299025036549,0.224291896585659,0.346759961330537,0.10263113188059,-0.25,-0.338329500293588,-0.0689748448207363,0.273300466750439,0.326640741219094,0.0346542922997736,-0.293968900604839,-0.311806253246668},
		{0.25,0.102631131880589,-0.29396890060484,-0.273300466750439,0.135299025036549,0.351850934381596,0.0689748448207356,-0.311806253246668,-0.25,0.166663914619437,0.346759961330537,0.0346542922997723,-0.326640741219094,-0.224291896585659,0.196423739596776,0.338329500293588},
		{0.25,0.0346542922997729,-0.346759961330537,-0.10263113188059,0.326640741219094,0.166663914619437,-0.293968900604839,-0.22429189658566,0.25,0.27330046675044,-0.196423739596775,-0.311806253246668,0.135299025036548,0.338329500293588,-0.0689748448207346,-0.351850934381596},
		{0.25,-0.0346542922997729,-0.346759961330537,0.10263113188059,0.326640741219094,-0.166663914619437,-0.293968900604839,0.224291896585659,0.25,-0.273300466750439,-0.196423739596776,0.311806253246668,0.135299025036549,-0.338329500293588,-0.0689748448207352,0.351850934381596},
		{0.25,-0.102631131880589,-0.29396890060484,0.273300466750439,0.13529902503655,-0.351850934381596,0.0689748448207354,0.311806253246668,-0.25,-0.166663914619437,0.346759961330537,-0.0346542922997718,-0.326640741219094,0.224291896585659,0.196423739596777,-0.338329500293588},
		{0.25,-0.166663914619437,-0.196423739596776,0.351850934381596,-0.135299025036549,-0.224291896585659,0.346759961330537,-0.102631131880589,-0.25,0.338329500293588,-0.0689748448207359,-0.273300466750439,0.326640741219094,-0.034654292299773,-0.29396890060484,0.311806253246668},
		{0.25,-0.224291896585659,-0.0689748448207359,0.311806253246668,-0.326640741219094,0.102631131880589,0.196423739596776,-0.351850934381596,0.25,0.0346542922997737,-0.29396890060484,0.338329500293588,-0.135299025036549,-0.166663914619437,0.346759961330537,-0.273300466750438},
		{0.25,-0.273300466750439,0.0689748448207358,0.166663914619437,-0.326640741219094,0.338329500293588,-0.196423739596775,-0.0346542922997724,0.25,-0.351850934381596,0.29396890060484,-0.102631131880589,-0.13529902503655,0.311806253246668,-0.346759961330537,0.224291896585659},
		{0.25,-0.311806253246668,0.196423739596775,-0.0346542922997726,-0.13529902503655,0.27330046675044,-0.346759961330537,0.338329500293588,-0.25,0.102631131880589,0.0689748448207365,-0.22429189658566,0.326640741219094,-0.351850934381596,0.293968900604838,-0.166663914619435},
		{0.25,-0.338329500293588,0.29396890060484,-0.224291896585659,0.135299025036549,-0.0346542922997732,-0.0689748448207364,0.166663914619437,-0.25,0.311806253246668,-0.346759961330537,0.351850934381596,-0.326640741219094,0.273300466750439,-0.196423739596775,0.102631131880589},
		{0.25,-0.351850934381596,0.346759961330537,-0.338329500293588,0.326640741219094,-0.311806253246668,0.293968900604839,-0.273300466750439,0.25,-0.224291896585659,0.196423739596775,-0.166663914619435,0.135299025036548,-0.102631131880588,0.0689748448207343,-0.0346542922997715}
	};
    float xi[ROW], xq[ROW];
    float xi_dct[ROW], xq_dct[ROW];
    float Atyi[ROW], Atyq[ROW];
	float yi[COL], yq[COL];
	for(int i=0; i<COL; i++){
		yi[i] = y[i];
		yq[i] = y[COL+i];
	}
	MAT_VEC_MUL<float,ROW,COL>(At, yi, Atyi);
	pgd_f32(AtA, Atyi, lambda, beta, gamma, xi);
	MAT_VEC_MUL<float,ROW,COL>(At, yq, Atyq);
	pgd_f32(AtA, Atyq, lambda, beta, gamma, xq);
	MAT_VEC_MUL<float,ROW,ROW>(DCTinvM, xi, xi_dct);
	MAT_VEC_MUL<float,ROW,ROW>(DCTinvM, xq, xq_dct);
	VEC_SCALAR_NZERODIV<float,ROW>(xi_dct, xi_dct);
	VEC_DIV<float,ROW>(xq_dct, xi_dct, xd);
	VEC_SCALAR_MAX<float,ROW>(300.0f, xd, xd);
	VEC_SCALAR_MAX<float,ROW>(xd, 0.0f, xd);

}

typedef ap_axiu<32,4,5,5> AXI_VAL;
//typedef ap_axiu<32,1,1,1> AXI_VAL;
void wrapped_csdr_pgd_hw(AXI_VAL in_stream[ROW], AXI_VAL out_stream[ROW])
{
	// stream in the 2 input matrices
	float y[COL*2];
	float xd[ROW];
	for(int i=0; i<2*COL; i++){
		#pragma HLS PIPELINE II=1
		y[i] = pop_stream<float,4,5,5>(in_stream[i]);
	}

	// do computation
	csdr_pgd(y, xd);

	// stream out result matrix
	for (int i=0; i<ROW; i++)
	{
		#pragma HLS PIPELINE II=1
		out_stream[i] = push_stream<float,4,5,5>(xd[i], i==ROW-1);
//		out_stream[i] = push_stream<float,1,1,1>(x[i], i==ROW-1);
	}
}
// this is the top level design that will be synthesised into RTL
void HLS_accel(AXI_VAL INPUT_STREAM[ROW], AXI_VAL OUTPUT_STREAM[ROW])
{
	// Map ports to Vivado HLS interfaces
//	#pragma HLS INTERFACE s_axilite port=return bundle=CONTROL_BUS
	#pragma HLS INTERFACE axis port=INPUT_STREAM
	#pragma HLS INTERFACE axis port=OUTPUT_STREAM

	wrapped_csdr_pgd_hw(INPUT_STREAM, OUTPUT_STREAM);
}
